import { useQuery } from "@apollo/client";
import Head from "next/head";
import { DocumentType, graphql } from "../__generated__/gql";
import { BrandLink } from "../src/components/BrandLink";
import { ProductLink } from "../src/components/ProductLink";
import { GetServerSideProps, InferGetServerSidePropsType } from "next";
import { client } from "../src/apollo-client";

const GetProductsDocument = graphql(`
  query GetProducts {
    products {
      id
      ...ProductLink_Product
    }
    brands {
      id
      ...BrandLink_Brand
    }
  }
`);

export const getServerSideProps: GetServerSideProps<{
  data: DocumentType<typeof GetProductsDocument>;
}> = async () => {
  const { data } = await client.query({
    query: GetProductsDocument,
  });

  return {
    props: {
      data: data,
    },
  };
};

export default function Home({
  data,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  console.log({ data });

  return (
    <div>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>Products</h1>
        <ul>
          {data.products.map((product) => (
            <li key={product.id}>
              <ProductLink product={product} />
            </li>
          ))}
        </ul>

        <h1>Brands</h1>
        <ul>
          {data.brands.map((brand) => (
            <li key={brand.id}>
              <BrandLink brand={brand} />
            </li>
          ))}
        </ul>
      </main>
    </div>
  );
}
